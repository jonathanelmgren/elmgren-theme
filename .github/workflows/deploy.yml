name: PHP Composer and Node.js Build & Release

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm ci

    - name: Build package
      run: npm run build # Assuming you have a build script in your package.json

    - name: Zip the repository
      run: zip -r repo.zip ./* 

    - name: Upload ZIP as a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: repo.zip
        path: ./repo.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download the Build Artifact
      uses: actions/download-artifact@v2
      with:
        name: repo.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }} # This token is provided by Actions, you do not need to create your own token
      with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`.
        asset_path: ./repo.zip
        asset_name: repo.zip
        asset_content_type: application/zip # or whatever is the correct content type for your asset
